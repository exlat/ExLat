From d3411d96bc37ee30f485676abc3bd68ae7342a1c Mon Sep 17 00:00:00 2001
From: swathy <swathysukumaran@gmail.com>
Date: Sat, 21 Apr 2012 18:50:11 +0530
Subject: [PATCH 1/2] date format changed

---
 gcalread.py |  101 ++++++++++++++++++++++++++++++++++++++++++++++++++++++----
 1 files changed, 94 insertions(+), 7 deletions(-)

diff --git a/gcalread.py b/gcalread.py
index eb8f780..f6a92d7 100755
--- a/gcalread.py
+++ b/gcalread.py
@@ -29,7 +29,7 @@ def getListofDictionary(List, EventName):
      Testing
   """
   EventCount = List.count(EventName)
-  EventsList = []
+  
   End = 0
 
   # Iterate through all the records with SUMMARY = EventName
@@ -41,23 +41,110 @@ def getListofDictionary(List, EventName):
     Start = EventIndex - (List[EventIndex:0:-1].index('BEGIN'))
     End = List.index('END', EventIndex)
     KeyIndex = Start + 1
-
+    newlist=List[Start:End]
     for Entry in List[Start:End:2]:
       # FIXIT: If the event in the calender is not part of a series of events
       # the dates strings are different. That is if the event is planned as an
       # extra event
+      flag=0
+      if Entry == 'RRULE':
+         index=newlist.index('RRULE')
+         EventsList = repeat(newlist,index)
+         flag=1
+         break
+    if flag == 0:
+       EventsList = dictionary(List,Start,End,KeyIndex)
+  return EventsList
+
+
+def repeat(newlist,index):
+   """generating startdate and enddate for repeating events"""
+   temp = newlist[index+1]
+   values=temp.split(';')
+   freq=values[0].split('=')
+   cnt=values[1].split('=')
+   count=[]
+   count.append(cnt[1])
+   c=map(int,count)
+   cnt=c[0]
+   start=newlist.index('BEGIN')
+   end=newlist.index('OPAQUE')
+   keyindex=start+1
+   arr = []
+   arr2 = []
+   i=0 
+   for entry in newlist[start:end:2]:
+      if entry == 'DTSTART;TZID=Asia/Calcutta':
+         s=datetime.datetime.strptime(newlist[keyindex],"%Y%m%dT%H%M%S")
+         arr.append(s.strftime('%Y'))
+         arr.append(s.strftime('%m'))
+         arr.append(s.strftime('%d'))
+         arr.append(s.strftime('%H'))
+         arr.append(s.strftime('%M'))
+         arr.append(s.strftime('%S'))   
+      if entry == 'DTEND;TZID=Asia/Calcutta':
+         s=datetime.datetime.strptime(newlist[keyindex],"%Y%m%dT%H%M%S")
+         arr2.append(s.strftime('%Y'))
+         arr2.append(s.strftime('%m'))
+         arr2.append(s.strftime('%d'))
+         arr2.append(s.strftime('%H'))
+         arr2.append(s.strftime('%M'))
+         arr2.append(s.strftime('%S'))
+      if entry == 'DESCRIPTION':
+         topic = newlist[keyindex]
+
+      keyindex += 2
+   intarr=map(int,arr)
+   inityear=intarr[0]
+   initmonth=intarr[1]
+   initday=intarr[2]
+   inithour=intarr[3]
+   initminut=intarr[4]
+   intarr2=map(int,arr2)
+   finyear=intarr2[0]
+   finmonth=intarr2[1]
+   finday=intarr2[2]
+   finhour=intarr2[3]
+   finminut=intarr2[4]
+
+   if freq[1] == 'MONTHLY':
+      while i < cnt :
+            Dict={} 
+            Dict['Start Date'] = '%i' %inityear+'-'+'%i' %initmonth+'-'+'%i' %initday+' at '+'%i' %inithour+':'+'%i' %initminut
+            Dict['End Date'] = '%i' %finyear+'-'+'%i' %finmonth+'-'+'%i' %finday+' at '+'%i' %finhour+':'+'%i' %finminut
+            Dict['Topic'] = topic
+            EventsList.append(Dict)       
+            initmonth += 1
+            finmonth += 1
+            i += 1
+            if initmonth > 12:
+               initmonth=1
+               inityear += 1
+            if finmonth > 12:
+               finmonth=1
+               finyear += 1
+   return EventsList 
+         
+
+
+
+
+def dictionary(List,Start,End,KeyIndex):
+   """dictionary when event is not repeating"""
+   Dict={}
+   for Entry in List[Start:End:2]:
       if Entry == 'DTSTART':
         s=datetime.datetime.strptime(List[KeyIndex],"%Y%m%dT%H%M%SZ")
-        Dict['Start Date'] = s.strftime('%H:%M %d %B %Y (UTC)')
+        Dict['Start Date'] = s.strftime('%Y-%m-%d-%H:%M')
       if Entry == 'DTEND':
-        Dict['End Date'] =s.strftime('%H:%M %d %B %Y (UTC)')
+        Dict['End Date'] = s.strftime('%Y-%m-%d-%H:%M')
       if Entry == 'DESCRIPTION':
         Dict['Topic'] = List[KeyIndex]
       KeyIndex += 2
-    EventsList.append(Dict)
-
-  return EventsList
+   EventsList.append(Dict)
 
+   return EventsList
+EventsList = []
 if len(sys.argv) != 3:
   print "Usage: ./gcalread.py <.ics file> <SUMMARY String>"
   sys.exit(1)
-- 
1.7.5.4

